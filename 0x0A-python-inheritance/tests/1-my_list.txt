=================
Test 1-my_list.py
=================

Creates MyList and has the first method that sorts a list.

=====
Tests
=====

Import `MyList()` from 1-my_list.py:

	>>> MyList = __import__('1-my_list').MyList

Case #1: MyList called without an object:

	>>> MyList()
	[]
	>>> my_list = MyList()
	>>> print(my_list)
	[]
	>>>

Case #2: Numbers assigned to MyList:

	>>> MyList([8, 7, 1, 6, 9])
	[8, 7, 1, 6, 9]
	>>> MyList([8, 7, 1, 6, 9]).print_sorted()
	[1, 6, 7, 8, 9]
	>>> my_list = [8, 7, 1, 6, 9]
	>>> my_list.print_sorted()
	Traceback (most recent call last):
	...
	AttributeError: 'list' object has no attribute 'print_sorted'
	>>> my_list = MyList()
	>>> print(my_list)
	[]
	>>> my_list.append(8)
	>>> my_list.append(7)
	>>> my_list.append(1)
	>>> my_list.append(6)
	>>> my_list.append(9)
	>>> print(my_list)
	[8, 7, 1, 6, 9]
	>>> my_list.print_sorted()
	[1, 6, 7, 8, 9]
	>>> my_list = MyList()
	>>> my_list.append(2.4)
	>>> my_list.append(1)
	>>> my_list.append(7.2)
	>>> my_list.append(8)
	>>> my_list.append(6.9)
	>>> print(my_list)
	[2.4, 1, 7.2, 8, 6.9]
	>>> my_list.print_sorted()
	[1, 2.4, 6.9, 7.2, 8]
	>>>

Case #3: Non-numerals assigned to MyList:

	>>> MyList(['b', 'u', 't', 't', 'e', 'r']).print_sorted()
	['b', 'e', 'r', 't', 't', 'u']
	>>> my_list = MyList()
	>>> my_list.append('b')
	>>> my_list.append('u')
	>>> my_list.append('t')
	>>> my_list.append('t')
	>>> my_list.append('e')
	>>> my_list.append('r')
	>>> my_list.print_sorted()
	['b', 'e', 'r', 't', 't', 'u']
	>>> my_list = MyList()
	>>> my_list.append([4, 5, 6])
	>>> my_list.append([1, 2, 3])
	>>> my_list.append([7, 8, 9])
	>>> print(my_list)
	[[4, 5, 6], [1, 2, 3], [7, 8, 9]]
	>>> my_list.print_sorted()
	[[1, 2, 3], [4, 5, 6], [7, 8, 9]]
	>>> my_list = MyList()
	>>> my_list.append([4, 5, 6])
	>>> my_list.append([1, 2, 3])
	>>> my_list.append([7, 8, 9])
	>>> my_list.append([2, 3, 4, 5])
	>>> my_list.append([6, 7, 8, 9, 10])
	>>> print(my_list)
	[[4, 5, 6], [1, 2, 3], [7, 8, 9], [2, 3, 4, 5], [6, 7, 8, 9, 10]]
	>>> my_list.print_sorted()
	[[1, 2, 3], [2, 3, 4, 5], [4, 5, 6], [6, 7, 8, 9, 10], [7, 8, 9]]
	>>> my_list = MyList()
	>>> my_list.append('animal')
	>>> my_list.append('acivmal')
	>>> my_list.append('acifmal')
	>>> my_list.append('bcifmal')
	>>> my_list.append('baifmal')
	>>> my_list.append('baifmaz')
	>>> my_list.append('baifmbz')
	>>> print(my_list)
	['animal', 'acivmal', 'acifmal', 'bcifmal', 'baifmal', 'baifmaz', 'baifmbz']
	>>> my_list.print_sorted()
	['acifmal', 'acivmal', 'animal', 'baifmal', 'baifmaz', 'baifmbz', 'bcifmal']
	>>> my_list = MyList()
	>>> my_list.append(8.9)
	>>> my_list.append(5)
	>>> my_list.append(6)
	>>> my_list.append(9)
	>>> my_list.append('butter')
	>>> print(my_list)
	[8.9, 5, 6, 9, 'butter']
	>>> my_list.print_sorted()
	Traceback (most recent call last):
	...
	TypeError: '<' not supported between instances of 'str' and 'float'
	>>> my_list = MyList()
	>>> my_list.append([9, 6, 69])
	>>> my_list.append(5)
	>>> my_list.append(6)
	>>> my_list.append(9)
	>>> my_list.append(7)
	>>> print(my_list)
	[[9, 6, 69], 5, 6, 9, 7]
	>>> my_list.print_sorted()
	Traceback (most recent call last):
	...
	TypeError: '<' not supported between instances of 'int' and 'list'

Case #4: Can it handle infinity?:

	>>> MyList([9, 6, float("inf")]).print_sorted()
	[6, 9, inf]
	>>> my_list = MyList()
	>>> my_list.append(6)
	>>> my_list.append(9)
	>>> my_list.append(float("inf"))
	>>> my_list.print_sorted()
	[6, 9, inf]
	>>>

Case #5: What if it just isn't a number?:

	>>> MyList([9, 6, float("NaN")]).print_sorted()
	[6, 9, nan]
	>>> my_list = MyList()
	>>> my_list.append(6)
	>>> my_list.append(9)
	>>> my_list.append(float("NaN"))
	>>> my_list.print_sorted()
	[6, 9, nan]
	>>>
